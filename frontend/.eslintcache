[{"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\index.js":"1","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\App.js":"2","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\StateProvider.js":"4","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Private.js":"5","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Public.js":"6","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Error.js":"7","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Spinner.js":"8","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Login.js":"9","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Signup.js":"10","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\AllPosts.js":"11","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Dashboard.js":"12","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Navbar.js":"13","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Post.js":"14","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\AllPosts.js":"15","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Post.js":"16","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\ErrorBoundary.js":"17","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\FallbackUI.js":"18","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\AddPost.js":"19","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\Reducer.js":"20","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Navbar.js":"21","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\MainNav.js":"22","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Profile.js":"23","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Profile.js":"24","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\MyProfile.js":"25"},{"size":500,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":1371,"mtime":1611557278344,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":599,"mtime":1611460093822,"results":"30","hashOfConfig":"27"},{"size":481,"mtime":1611400004708,"results":"31","hashOfConfig":"27"},{"size":483,"mtime":1611400132958,"results":"32","hashOfConfig":"27"},{"size":460,"mtime":1611426233153,"results":"33","hashOfConfig":"27"},{"size":844,"mtime":1611456876137,"results":"34","hashOfConfig":"27"},{"size":3039,"mtime":1611511212521,"results":"35","hashOfConfig":"27"},{"size":3780,"mtime":1611511258061,"results":"36","hashOfConfig":"27"},{"size":1077,"mtime":1611511295063,"results":"37","hashOfConfig":"27"},{"size":1385,"mtime":1611555312792,"results":"38","hashOfConfig":"27"},{"size":1414,"mtime":1611465885937,"results":"39","hashOfConfig":"27"},{"size":553,"mtime":1611487989812,"results":"40","hashOfConfig":"27"},{"size":606,"mtime":1611473597120,"results":"41","hashOfConfig":"27"},{"size":2567,"mtime":1611552772830,"results":"42","hashOfConfig":"27"},{"size":581,"mtime":1611415954473,"results":"43","hashOfConfig":"27"},{"size":207,"mtime":1611415764791,"results":"44","hashOfConfig":"27"},{"size":2810,"mtime":1611511358941,"results":"45","hashOfConfig":"27"},{"size":1456,"mtime":1611514789834,"results":"46","hashOfConfig":"27"},{"size":2016,"mtime":1611558019189,"results":"47","hashOfConfig":"27"},{"size":363,"mtime":1611481344205,"results":"48","hashOfConfig":"27"},{"size":330,"mtime":1611511531786,"results":"49","hashOfConfig":"27"},{"size":3372,"mtime":1611559462930,"results":"50","hashOfConfig":"27"},{"size":1535,"mtime":1611557009404,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"fujzao",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\index.js",[],["110","111"],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\App.js",["112"],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\StateProvider.js",["113","114"],"import React, { createContext, useReducer, useState } from 'react';\r\nimport reducer, { initialState } from './Reducer';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = (props) => {\r\n    // let id = localStorage.getItem('id');\r\n    // let username = localStorage.getItem('username');\r\n    let isAuth = false;\r\n    // if (id && username) isAuth = true;\r\n\r\n    const [user, dispatch] = useReducer(reducer, initialState);\r\n    return (\r\n        <StateContext.Provider value={[user, dispatch]}>\r\n            {props.children}\r\n        </StateContext.Provider>\r\n    );\r\n};\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Private.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Public.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Error.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Spinner.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Login.js",["115"],"import React, { useContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { StateContext } from '../StateProvider';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [user, dispatch] = useContext(StateContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [formData, setFormData] = useState({ email: '', password: '' });\r\n\r\n    const inputHandler = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const body = JSON.stringify(formData);\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        dispatch({ type: 'LOADING' });\r\n        const res = await axios.post('/api/v1/auth/signin', body, config);\r\n        dispatch({ type: 'STOP_LOADING' });\r\n\r\n        console.log(res);\r\n\r\n        if (res.data.error === false) {\r\n            console.log(res.data);\r\n            const { _id, username, name } = res.data.payload;\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                payload: { id: _id, username, name }\r\n            });\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('id', true);\r\n            return history.push('/dashboard');\r\n        } else {\r\n            dispatch({ type: 'ERROR', payload: res.data.errorMessage });\r\n            setTimeout(() => dispatch({ type: 'REMOVE_ERROR' }), 2000);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form className='my-2' onSubmit={(e) => submitHandler(e)}>\r\n                <div className='form-group'>\r\n                    <label htmlFor='exampleInputEmail1'>Email address</label>\r\n                    <input\r\n                        type='email'\r\n                        name='email'\r\n                        className='form-control'\r\n                        id='exampleInputEmail1'\r\n                        aria-describedby='emailHelp'\r\n                        placeholder='Enter email'\r\n                        value={formData.email}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='exampleInputPassword1'>Password</label>\r\n                    <input\r\n                        name='password'\r\n                        type='password'\r\n                        className='form-control'\r\n                        id='exampleInputPassword1'\r\n                        placeholder='Password'\r\n                        value={formData.password}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type='submit' className='btn btn-primary'>\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Signup.js",["116"],"import React, { useContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { StateContext } from '../StateProvider';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Signup = () => {\r\n    const [user, dispatch] = useContext(StateContext);\r\n    const history = useHistory();\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const inputHandler = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const submitHandler = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            const body = JSON.stringify(formData);\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n\r\n            dispatch({ type: 'LOADING' });\r\n\r\n            const res = await axios.post('/api/v1/auth/signup', body, config);\r\n\r\n            dispatch({ type: 'STOP_LOADING' });\r\n            if (res.data.error) {\r\n                dispatch({ type: 'ERROR', payload: res.data.errorMessage });\r\n            } else {\r\n                const { _id, username, name } = res.data.payload;\r\n                dispatch({\r\n                    type: 'SIGNUP',\r\n                    payload: { id: _id, username, name }\r\n                });\r\n                history.push('/dashboard');\r\n            }\r\n        } catch (error) {\r\n            dispatch({ type: 'ERROR', payload: error.message });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => submitHandler(e)}>\r\n                <div className='form-group'>\r\n                    <label>Name</label>\r\n                    <input\r\n                        type='text'\r\n                        name='name'\r\n                        className='form-control'\r\n                        placeholder='Enter name'\r\n                        value={formData.name}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>username</label>\r\n                    <input\r\n                        type='test'\r\n                        name='username'\r\n                        className='form-control'\r\n                        placeholder='Enter username'\r\n                        value={formData.username}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Email address</label>\r\n                    <input\r\n                        type='email'\r\n                        name='email'\r\n                        className='form-control'\r\n                        placeholder='Enter email'\r\n                        value={formData.email}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Password</label>\r\n                    <input\r\n                        name='password'\r\n                        type='password'\r\n                        className='form-control'\r\n                        placeholder='Password'\r\n                        value={formData.password}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type='submit' className='btn btn-primary'>\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\AllPosts.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Dashboard.js",["117"],"import axios from 'axios';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { StateContext } from '../StateProvider';\r\nimport AddPost from './AddPost';\r\nimport AllPosts from './AllPosts';\r\n\r\nconst Dashboard = () => {\r\n    const [user, dispatch] = useContext(StateContext);\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            dispatch({ type: 'LOADING' });\r\n            const res = await axios.get('/api/v1/dashboard');\r\n            dispatch({ type: 'STOP_LOADING' });\r\n            console.log(res.data);\r\n            if (res.data.error) {\r\n                dispatch({ type: 'AUTH_ERROR' });\r\n            } else {\r\n                const { id, posts } = res.data.payload;\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    payload: { id }\r\n                });\r\n                dispatch({ type: 'ADD_POST', payload: posts });\r\n            }\r\n        };\r\n        try {\r\n            fetchPosts();\r\n        } catch (error) {\r\n            console.log(error);\r\n            setTimeout(() => {\r\n                dispatch({ type: 'REMOVE_ERROR' });\r\n            }, 2000);\r\n            dispatch({ type: 'AUTH_ERROR' });\r\n        }\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <div>Dashboard</div>\r\n            <AddPost />\r\n            <AllPosts />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Navbar.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Post.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\AllPosts.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Post.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\ErrorBoundary.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\FallbackUI.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\AddPost.js",["118"],"import axios from 'axios';\r\nimport React, { useContext, useState } from 'react';\r\nimport { StateContext } from '../StateProvider';\r\n\r\nconst AddPost = () => {\r\n    const [user, dispatch] = useContext(StateContext);\r\n\r\n    const [formData, setFormData] = useState({ title: '', body: '' });\r\n\r\n    const inputHandler = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const submitHandler = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            const body = JSON.stringify(formData);\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n\r\n            dispatch({ type: 'LOADING' });\r\n            const { data } = await axios.post(\r\n                '/api/v1/post/create',\r\n                body,\r\n                config\r\n            );\r\n\r\n            dispatch({ type: 'STOP_LOADING' });\r\n\r\n            if (data.error) {\r\n                dispatch({ type: 'ERROR', payload: data.errorMessage });\r\n                setTimeout(() => {\r\n                    dispatch({ type: 'REMOVE_ERROR' });\r\n                }, 2000);\r\n            } else {\r\n                dispatch({ type: 'SET_POST', payload: data.payload.posts });\r\n            }\r\n            console.log(data);\r\n            setFormData({ title: '', body: '' });\r\n        } catch (error) {\r\n            setFormData({ title: '', body: '' });\r\n            dispatch({ type: 'ERROR', payload: error.message });\r\n            setTimeout(() => {\r\n                dispatch({ type: 'REMOVE_ERROR' });\r\n            }, 2000);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form className='my-2' onSubmit={(e) => submitHandler(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        name='title'\r\n                        className='form-control'\r\n                        placeholder='Title'\r\n                        value={formData.title}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        name='body'\r\n                        type='text'\r\n                        className='form-control'\r\n                        placeholder='Body'\r\n                        value={formData.body}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type='submit' className='btn btn-primary'>\r\n                    Add post\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddPost;\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\Reducer.js",["119"],"import { useHistory } from 'react-router-dom';\r\n\r\nexport const initialState = {\r\n    isAuth: localStorage.getItem('isAuth') || false,\r\n    id: null,\r\n    name: '',\r\n    email: '',\r\n    username: '',\r\n    posts: [],\r\n    error: false,\r\n    errorMessage: '',\r\n    loading: false,\r\n    profile: {}\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_POST':\r\n        case 'DELETE_POST':\r\n        case 'SET_POST':\r\n            return { ...state, posts: [...action.payload] };\r\n\r\n        case 'SET_USER':\r\n        case 'LOGIN':\r\n        case 'SIGNUP':\r\n            localStorage.setItem('isAuth', true);\r\n\r\n            return { ...state, ...action.payload, isAuth: true };\r\n\r\n        case 'LOADING':\r\n            return { ...state, loading: true };\r\n        case 'STOP_LOADING':\r\n            return { ...state, loading: false };\r\n\r\n        case 'LOGOUT':\r\n        case 'AUTH_ERROR':\r\n            localStorage.clear();\r\n            return { ...initialState };\r\n\r\n        case 'ERROR':\r\n            return { ...state, error: true, errorMessage: action.payload };\r\n\r\n        case 'REMOVE_ERROR':\r\n            return { ...state, error: false, errorMessage: null };\r\n\r\n        case 'SET_PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, ...action.payload }\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Navbar.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\MainNav.js",["120"],"import React, { useContext } from 'react';\r\nimport Navbar from './publicComponent/Navbar';\r\nimport AuthNavbar from './privateComponent/Navbar';\r\nimport { StateContext } from './StateProvider';\r\n\r\nconst MainNav = () => {\r\n    const [user, dispatch] = useContext(StateContext);\r\n    return user.isAuth ? <AuthNavbar /> : <Navbar />;\r\n};\r\n\r\nexport default MainNav;\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Profile.js",["121","122"],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Profile.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\MyProfile.js",["123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":14,"column":8,"nodeType":"130","messageId":"131","endLine":14,"endColumn":17},{"ruleId":"128","severity":1,"message":"132","line":1,"column":44,"nodeType":"130","messageId":"131","endLine":1,"endColumn":52},{"ruleId":"128","severity":1,"message":"133","line":9,"column":9,"nodeType":"130","messageId":"131","endLine":9,"endColumn":15},{"ruleId":"128","severity":1,"message":"134","line":7,"column":12,"nodeType":"130","messageId":"131","endLine":7,"endColumn":16},{"ruleId":"128","severity":1,"message":"134","line":7,"column":12,"nodeType":"130","messageId":"131","endLine":7,"endColumn":16},{"ruleId":"128","severity":1,"message":"134","line":8,"column":12,"nodeType":"130","messageId":"131","endLine":8,"endColumn":16},{"ruleId":"128","severity":1,"message":"134","line":6,"column":12,"nodeType":"130","messageId":"131","endLine":6,"endColumn":16},{"ruleId":"128","severity":1,"message":"135","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":20},{"ruleId":"128","severity":1,"message":"136","line":7,"column":18,"nodeType":"130","messageId":"131","endLine":7,"endColumn":26},{"ruleId":"128","severity":1,"message":"134","line":5,"column":12,"nodeType":"130","messageId":"131","endLine":5,"endColumn":16},{"ruleId":"128","severity":1,"message":"136","line":5,"column":18,"nodeType":"130","messageId":"131","endLine":5,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":32,"column":8,"nodeType":"139","endLine":32,"endColumn":18,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'MyProfile' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'isAuth' is assigned a value but never used.","'user' is assigned a value but never used.","'useHistory' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.","ArrayExpression",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},"Update the dependencies array to be: [dispatch, user.id]",{"range":"146","text":"147"},[1171,1181],"[dispatch, user.id]"]