[{"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\index.js":"1","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\App.js":"2","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\StateProvider.js":"4","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Private.js":"5","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Public.js":"6","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Error.js":"7","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Spinner.js":"8","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Login.js":"9","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Signup.js":"10","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\AllPosts.js":"11","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Dashboard.js":"12","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Navbar.js":"13","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Post.js":"14","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\AllPosts.js":"15","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Post.js":"16","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\ErrorBoundary.js":"17","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\FallbackUI.js":"18","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\AddPost.js":"19","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\Reducer.js":"20","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Navbar.js":"21","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\MainNav.js":"22","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Profile.js":"23","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Profile.js":"24","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\MyProfile.js":"25","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\FullPost.js":"26","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\FormComment.js":"27","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Comment.js":"28","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\NotFound.js":"29","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Home.js":"30"},{"size":500,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":2398,"mtime":1611654571249,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":599,"mtime":1611460093822,"results":"35","hashOfConfig":"32"},{"size":481,"mtime":1611400004708,"results":"36","hashOfConfig":"32"},{"size":485,"mtime":1611633587377,"results":"37","hashOfConfig":"32"},{"size":460,"mtime":1611426233153,"results":"38","hashOfConfig":"32"},{"size":844,"mtime":1611456876137,"results":"39","hashOfConfig":"32"},{"size":3100,"mtime":1611642576480,"results":"40","hashOfConfig":"32"},{"size":3758,"mtime":1611642604405,"results":"41","hashOfConfig":"32"},{"size":2268,"mtime":1611643595608,"results":"42","hashOfConfig":"32"},{"size":3130,"mtime":1611644129353,"results":"43","hashOfConfig":"32"},{"size":662,"mtime":1611655356245,"results":"44","hashOfConfig":"32"},{"size":553,"mtime":1611487989812,"results":"45","hashOfConfig":"32"},{"size":606,"mtime":1611642991582,"results":"46","hashOfConfig":"32"},{"size":2865,"mtime":1611636768352,"results":"47","hashOfConfig":"32"},{"size":581,"mtime":1611415954473,"results":"48","hashOfConfig":"32"},{"size":207,"mtime":1611415764791,"results":"49","hashOfConfig":"32"},{"size":2798,"mtime":1611642777906,"results":"50","hashOfConfig":"32"},{"size":2008,"mtime":1611635064212,"results":"51","hashOfConfig":"32"},{"size":1630,"mtime":1611655449484,"results":"52","hashOfConfig":"32"},{"size":353,"mtime":1611632920761,"results":"53","hashOfConfig":"32"},{"size":330,"mtime":1611511531786,"results":"54","hashOfConfig":"55"},{"size":4288,"mtime":1611643706280,"results":"56","hashOfConfig":"32"},{"size":1535,"mtime":1611557009404,"results":"57","hashOfConfig":"55"},{"size":5033,"mtime":1611645387584,"results":"58","hashOfConfig":"32"},{"size":1521,"mtime":1611643781016,"results":"59","hashOfConfig":"32"},{"size":474,"mtime":1611637420035,"results":"60","hashOfConfig":"32"},{"size":357,"mtime":1611572494562,"results":"61","hashOfConfig":"32"},{"size":1900,"mtime":1611636989303,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"c579kl",{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"65"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"fujzao",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"65"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"65"},"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\index.js",[],["135","136"],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\App.js",["137"],"import './App.css';\nimport Login from './component/publicComponent/Login';\nimport Signup from './component/publicComponent/Signup';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { StateProvider } from './component/StateProvider';\nimport AllPosts from './component/publicComponent/AllPosts';\nimport Private from './utils/Private';\nimport Dashboard from './component/privateComponent/Dashboard';\nimport Public from './utils/Public';\nimport Error from './utils/Error';\nimport Spinner from './utils/Spinner';\nimport MainNav from './component/MainNav';\nimport Profile from './component/privateComponent/Profile';\nimport FullPost from './component/privateComponent/FullPost';\nimport NotFound from './component/publicComponent/NotFound';\nimport Home from './component/privateComponent/Home';\n\nfunction App() {\n    return (\n        <div className='container'>\n            <Router>\n                <StateProvider>\n                    <Error />\n                    <Spinner />\n                    <MainNav />\n                    <Switch>\n                        <Public path='/login' component={Login} exact={true} />\n                        <Public\n                            path='/signup'\n                            component={Signup}\n                            exact={true}\n                        />\n                        <Public path='/' component={AllPosts} exact={true} />\n                        <Public\n                            path='/:page'\n                            component={AllPosts}\n                            exact={true}\n                        />\n\n                        <Private\n                            path='/dashboard/:page'\n                            component={Dashboard}\n                            exact={true}\n                        />\n                        <Private\n                            path='/profile/:id'\n                            component={Profile}\n                            exact={true}\n                        />\n                        <Private\n                            path='/post/:postId'\n                            component={FullPost}\n                            exact={true}\n                        />\n                        <Route path='/*' component={NotFound} />\n                    </Switch>\n                </StateProvider>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\StateProvider.js",["138","139"],"import React, { createContext, useReducer, useState } from 'react';\r\nimport reducer, { initialState } from './Reducer';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = (props) => {\r\n    // let id = localStorage.getItem('id');\r\n    // let username = localStorage.getItem('username');\r\n    let isAuth = false;\r\n    // if (id && username) isAuth = true;\r\n\r\n    const [user, dispatch] = useReducer(reducer, initialState);\r\n    return (\r\n        <StateContext.Provider value={[user, dispatch]}>\r\n            {props.children}\r\n        </StateContext.Provider>\r\n    );\r\n};\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Private.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Public.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Error.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\Spinner.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Login.js",["140"],"import React, { useContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { StateContext } from '../StateProvider';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [user, dispatch] = useContext(StateContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [formData, setFormData] = useState({ email: '', password: '' });\r\n\r\n    const inputHandler = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const body = JSON.stringify(formData);\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        dispatch({ type: 'LOADING' });\r\n        const res = await axios.post('/api/v1/auth/signin', body, config);\r\n        dispatch({ type: 'STOP_LOADING' });\r\n\r\n        console.log(res);\r\n\r\n        if (res.data.error === false) {\r\n            console.log(res.data);\r\n            const { _id, username, name } = res.data.payload;\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                payload: { id: _id, username, name }\r\n            });\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('id', _id);\r\n            console.log('going to dashboard');\r\n            return history.push('/dashboard/1');\r\n        } else {\r\n            dispatch({ type: 'ERROR', payload: res.data.errorMessage });\r\n            setTimeout(() => dispatch({ type: 'REMOVE_ERROR' }), 2000);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form className='my-2' onSubmit={(e) => submitHandler(e)}>\r\n                <div className='mb-3'>\r\n                    <label htmlFor='exampleInputEmail1'>Email address</label>\r\n                    <input\r\n                        type='email'\r\n                        name='email'\r\n                        className='form-control'\r\n                        id='exampleInputEmail1'\r\n                        aria-describedby='emailHelp'\r\n                        placeholder='Enter email'\r\n                        value={formData.email}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='mb-3'>\r\n                    <label htmlFor='exampleInputPassword1'>Password</label>\r\n                    <input\r\n                        name='password'\r\n                        type='password'\r\n                        className='form-control'\r\n                        id='exampleInputPassword1'\r\n                        placeholder='Password'\r\n                        value={formData.password}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type='submit' className='btn btn-primary'>\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Login);\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Signup.js",["141"],"import React, { useContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { StateContext } from '../StateProvider';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Signup = () => {\r\n    const [user, dispatch] = useContext(StateContext);\r\n    const history = useHistory();\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const inputHandler = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const submitHandler = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            const body = JSON.stringify(formData);\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n\r\n            dispatch({ type: 'LOADING' });\r\n\r\n            const res = await axios.post('/api/v1/auth/signup', body, config);\r\n\r\n            dispatch({ type: 'STOP_LOADING' });\r\n            if (res.data.error) {\r\n                dispatch({ type: 'ERROR', payload: res.data.errorMessage });\r\n            } else {\r\n                const { _id, username, name } = res.data.payload;\r\n                dispatch({\r\n                    type: 'SIGNUP',\r\n                    payload: { id: _id, username, name }\r\n                });\r\n                history.push('/dashboard/1');\r\n            }\r\n        } catch (error) {\r\n            dispatch({ type: 'ERROR', payload: error.message });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => submitHandler(e)}>\r\n                <div className='mb-3'>\r\n                    <label>Name</label>\r\n                    <input\r\n                        type='text'\r\n                        name='name'\r\n                        className='form-control'\r\n                        placeholder='Enter name'\r\n                        value={formData.name}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='mb-3'>\r\n                    <label>username</label>\r\n                    <input\r\n                        type='test'\r\n                        name='username'\r\n                        className='form-control'\r\n                        placeholder='Enter username'\r\n                        value={formData.username}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='mb-3'>\r\n                    <label>Email address</label>\r\n                    <input\r\n                        type='email'\r\n                        name='email'\r\n                        className='form-control'\r\n                        placeholder='Enter email'\r\n                        value={formData.email}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='mb-3'>\r\n                    <label>Password</label>\r\n                    <input\r\n                        name='password'\r\n                        type='password'\r\n                        className='form-control'\r\n                        placeholder='Password'\r\n                        value={formData.password}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type='submit' className='btn btn-primary'>\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\AllPosts.js",["142","143"],"import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { StateContext } from '../StateProvider';\r\nimport Post from './Post';\r\n\r\nconst AllPosts = () => {\r\n    const [user, dispatch] = useContext(StateContext);\r\n    const page = parseInt(useParams().page) || 1;\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            dispatch({ type: 'LOADING' });\r\n            const res = await axios.get(`/api/v1/post?page=${page}`);\r\n            const posts = res.data.posts;\r\n            console.log(posts);\r\n\r\n            dispatch({ type: 'STOP_LOADING' });\r\n            dispatch({ type: 'SET_POST', payload: [...posts] });\r\n            dispatch({ type: 'LENGTH', payload: res.data.totalPosts });\r\n        };\r\n        fetchPosts();\r\n    }, [dispatch, page]);\r\n\r\n    return (\r\n        <>\r\n            <div className='bg-light p-5 rounded-lg m-3'>\r\n                {user.posts.map((post) => (\r\n                    <Post\r\n                        key={post._id}\r\n                        id={post._id}\r\n                        title={post.title}\r\n                        body={post.body}\r\n                        likes={[...post.likes]}\r\n                        time={post.datetime}\r\n                    />\r\n                ))}\r\n                <nav aria-label='Page navigation example'>\r\n                    <ul className='pagination'>\r\n                        {page > 1 && (\r\n                            <li className='page-item'>\r\n                                <Link className='page-link' to={`/${page - 1}`}>\r\n                                    Previous\r\n                                </Link>\r\n                            </li>\r\n                        )}\r\n                        {parseInt(user.totalPosts) > parseInt(page) * 3 && (\r\n                            <li className='page-item'>\r\n                                <Link className='page-link' to={`/${page + 1}`}>\r\n                                    Next\r\n                                </Link>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AllPosts;\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Dashboard.js",["144"],"import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { StateContext } from '../StateProvider';\r\nimport AddPost from './AddPost';\r\nimport AllPosts from './AllPosts';\r\n\r\nconst Dashboard = () => {\r\n    const [user, dispatch] = useContext(StateContext);\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                dispatch({ type: 'LOADING' });\r\n                const res = await axios.get(`/api/v1/dashboard/${page}`);\r\n                dispatch({ type: 'STOP_LOADING' });\r\n                console.log(res.data);\r\n                if (res.status === 403 || res.data.error) {\r\n                    dispatch({ type: 'AUTH_ERROR' });\r\n                    history.push('/login');\r\n                } else {\r\n                    const { id, posts, totalPosts } = res.data.payload;\r\n                    dispatch({\r\n                        type: 'SET_USER',\r\n                        payload: { id }\r\n                    });\r\n                    dispatch({ type: 'ADD_POST', payload: posts });\r\n                    dispatch({ type: 'LENGTH', payload: totalPosts });\r\n                }\r\n            } catch (error) {\r\n                dispatch({ type: 'STOP_LOADING' });\r\n                console.log(error);\r\n                setTimeout(() => {\r\n                    dispatch({ type: 'REMOVE_ERROR' });\r\n                }, 2000);\r\n                dispatch({ type: 'AUTH_ERROR' });\r\n            }\r\n        };\r\n        fetchPosts();\r\n    }, [dispatch, history, page]);\r\n\r\n    return (\r\n        <>\r\n            <div className='bg-light px-5 py-1 rounded-lg m-3'>\r\n                <div>Dashboard</div>\r\n                <AddPost />\r\n            </div>\r\n            <div className='bg-light p-5 rounded-lg m-3'>\r\n                <AllPosts />\r\n                <nav aria-label='Page navigation example'>\r\n                    <ul className='pagination'>\r\n                        {page && page > 1 && (\r\n                            <li className='page-item'>\r\n                                <button\r\n                                    className='page-link'\r\n                                    onClick={() => setPage(page - 1)}\r\n                                >\r\n                                    Previous\r\n                                </button>\r\n                            </li>\r\n                        )}\r\n                        {parseInt(user.totalPosts) > parseInt(page) * 3 && (\r\n                            <li className='page-item'>\r\n                                <button\r\n                                    className='page-link'\r\n                                    onClick={() => setPage(page + 1)}\r\n                                >\r\n                                    Next\r\n                                </button>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Navbar.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Post.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\AllPosts.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Post.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\ErrorBoundary.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\utils\\FallbackUI.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\AddPost.js",["145"],"import axios from 'axios';\r\nimport React, { useContext, useState } from 'react';\r\nimport { StateContext } from '../StateProvider';\r\n\r\nconst AddPost = () => {\r\n    const [user, dispatch] = useContext(StateContext);\r\n\r\n    const [formData, setFormData] = useState({ title: '', body: '' });\r\n\r\n    const inputHandler = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const submitHandler = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            const body = JSON.stringify(formData);\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n\r\n            dispatch({ type: 'LOADING' });\r\n            const { data } = await axios.post(\r\n                '/api/v1/post/create',\r\n                body,\r\n                config\r\n            );\r\n\r\n            dispatch({ type: 'STOP_LOADING' });\r\n\r\n            if (data.error) {\r\n                dispatch({ type: 'ERROR', payload: data.errorMessage });\r\n                setTimeout(() => {\r\n                    dispatch({ type: 'REMOVE_ERROR' });\r\n                }, 2000);\r\n            } else {\r\n                dispatch({ type: 'SET_POST', payload: data.payload.posts });\r\n            }\r\n            console.log(data);\r\n            setFormData({ title: '', body: '' });\r\n        } catch (error) {\r\n            setFormData({ title: '', body: '' });\r\n            dispatch({ type: 'ERROR', payload: error.message });\r\n            setTimeout(() => {\r\n                dispatch({ type: 'REMOVE_ERROR' });\r\n            }, 2000);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form className='my-2' onSubmit={(e) => submitHandler(e)}>\r\n                <div className='mb-3'>\r\n                    <input\r\n                        type='text'\r\n                        name='title'\r\n                        className='form-control'\r\n                        placeholder='Title'\r\n                        value={formData.title}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='mb-3'>\r\n                    <input\r\n                        name='body'\r\n                        type='text'\r\n                        className='form-control'\r\n                        placeholder='Body'\r\n                        value={formData.body}\r\n                        onChange={(e) => inputHandler(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type='submit' className='btn btn-primary'>\r\n                    Add post\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddPost;\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\Reducer.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Navbar.js",["146"],"import React, { useContext, useEffect } from 'react';\r\nimport { Link, useHistory, withRouter } from 'react-router-dom';\r\nimport { StateContext } from '../StateProvider';\r\nimport axios from 'axios';\r\n\r\nconst Navbar = () => {\r\n    const [user, dispatch] = useContext(StateContext);\r\n    const history = useHistory();\r\n    const signout = async () => {\r\n        try {\r\n            await axios.post('/api/v1/auth/signout');\r\n            dispatch({ type: 'LOGOUT' });\r\n            history.push('/login');\r\n        } catch (error) {\r\n            console.log('error in signout');\r\n            dispatch({ type: 'LOGOUT' });\r\n            history.push('/login');\r\n            window.location.reload();\r\n        }\r\n    };\r\n    return (\r\n        <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\r\n            <div className='container-fluid d-flex justify-content-around'>\r\n                <Link className='navbar-brand' to='/dashboard/1'>\r\n                    Surface\r\n                </Link>\r\n\r\n                <button className='btn btn-dark nav-link'>\r\n                    <Link\r\n                        style={{\r\n                            textDecoration: 'none',\r\n                            color: 'white'\r\n                        }}\r\n                        to={`/profile/${user.id}`}\r\n                    >\r\n                        My Profile\r\n                    </Link>\r\n                </button>\r\n                <button className='btn btn-dark nav-link' onClick={signout}>\r\n                    Signout\r\n                </button>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\MainNav.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\Profile.js",["147","148"],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Profile.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\MyProfile.js",["149"],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\FullPost.js",["150"],"import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { StateContext } from '../StateProvider';\r\nimport moment from 'moment';\r\nimport FormComment from './FormComment';\r\nimport Comment from './Comment';\r\n\r\nconst FullPost = () => {\r\n    const [user, dispatch] = useContext(StateContext);\r\n    // const [data, setData] = useState({ post: {}, comments: [] });\r\n    const { postId } = useParams();\r\n    const history = useHistory();\r\n    const [formData, setFormData] = useState({ body: '' });\r\n    const inputHandler = (e) => {\r\n        setFormData({ body: e.target.value });\r\n    };\r\n    const submitHandler = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            let body = JSON.stringify(formData);\r\n            const res = await axios.post(\r\n                `/api/v1/post/comment/${user.fullPost._id}`,\r\n                body,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            if (res.data.error) {\r\n                throw new Error(res.data.errorMessage);\r\n            } else {\r\n                console.log(res.data);\r\n                dispatch({\r\n                    type: 'FULL_POST',\r\n                    payload: { ...res.data.payload.post }\r\n                });\r\n                dispatch({\r\n                    type: 'COMMENTS',\r\n                    payload: [...res.data.payload.comments]\r\n                });\r\n            }\r\n            setFormData({ body: '' });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                dispatch({ type: 'LOADING' });\r\n                const res = await axios(`/api/v1/post/${postId}`);\r\n                dispatch({ type: 'STOP_LOADING' });\r\n                if (res.data.error) {\r\n                    throw new Error(res.data.errorMessage);\r\n                } else {\r\n                    console.log(res.data);\r\n                    dispatch({\r\n                        type: 'FULL_POST',\r\n                        payload: { ...res.data.payload.post }\r\n                    });\r\n                    dispatch({\r\n                        type: 'COMMENTS',\r\n                        payload: [...res.data.payload.comments]\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            }\r\n        };\r\n        fetchPost();\r\n    }, [dispatch, postId, history]);\r\n\r\n    return (\r\n        <>\r\n            <div className='bg-light p-5 rounded-lg m-3'>\r\n                <Link to='/dashboard/1'>\r\n                    <button className='btn btn-primary my-2'>\r\n                        Back to dashboard\r\n                    </button>\r\n                </Link>\r\n\r\n                <div className='card my-2' id={user.fullPost._id}>\r\n                    <div className='card-body'>\r\n                        <h4 className='card-title'>{user.fullPost.title}</h4>\r\n                        <h5 className='card-text'>{user.fullPost.body}</h5>\r\n                        <h6>\r\n                            By{' '}\r\n                            <Link to={`/profile/${user.fullPost.owner}`}>\r\n                                {user.fullPost.username}\r\n                            </Link>\r\n                        </h6>\r\n\r\n                        <p>\r\n                            Posted on{' '}\r\n                            {moment(user.fullPost.datetime).format(\r\n                                'MMMM Do YYYY, h:mm:ss a'\r\n                            )}\r\n                        </p>\r\n                        <form\r\n                            className='my-2'\r\n                            onSubmit={(e) => submitHandler(e)}\r\n                        >\r\n                            <div className='mb-3'>\r\n                                <input\r\n                                    type='text'\r\n                                    name='body'\r\n                                    className='form-control'\r\n                                    placeholder='Add comment'\r\n                                    value={formData.body}\r\n                                    onChange={(e) => inputHandler(e)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <button type='submit' className='btn btn-primary'>\r\n                                Add comment\r\n                            </button>\r\n                        </form>\r\n                        {/* <FormComment id={user.fullPost._id} /> */}\r\n                        {user.comments.map((comment) => (\r\n                            <Comment key={comment._id} {...comment} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FullPost;\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\FormComment.js",["151","152","153"],"import axios from 'axios';\r\nimport React, { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { StateContext } from '../StateProvider';\r\n\r\nconst FormComment = ({ id }) => {\r\n    const [formData, setFormData] = useState({ body: '' });\r\n    const history = useHistory();\r\n    const inputHandler = (e) => {\r\n        setFormData({ body: e.target.value });\r\n    };\r\n\r\n    const submitHandler = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            let body = JSON.stringify(formData);\r\n            const res = await axios.post(`/api/v1/post/comment/${id}`, body, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            history.push(`/post/${id}`);\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n    return (\r\n        <form className='my-2' onSubmit={(e) => submitHandler(e)}>\r\n            <div className='mb-3'>\r\n                <input\r\n                    type='text'\r\n                    name='body'\r\n                    className='form-control'\r\n                    placeholder='Add comment'\r\n                    value={formData.email}\r\n                    onChange={(e) => inputHandler(e)}\r\n                    required\r\n                />\r\n            </div>\r\n            <button type='submit' className='btn btn-primary'>\r\n                Add comment\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default FormComment;\r\n","C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Comment.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\publicComponent\\NotFound.js",[],"C:\\Users\\rawat\\Desktop\\hackathon\\backend\\frontend\\src\\component\\privateComponent\\Home.js",["154","155"],"import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { StateContext } from '../StateProvider';\r\nimport AddPost from './AddPost';\r\nimport Post from './Post';\r\n\r\nconst Home = () => {\r\n    const [user, dispatch] = useContext(StateContext);\r\n    const page = parseInt(useParams().page) || 1;\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            dispatch({ type: 'LOADING' });\r\n            const res = await axios.get(`/api/v1/post?page=${page}`);\r\n            const posts = res.data.posts;\r\n            console.log(posts);\r\n\r\n            dispatch({ type: 'STOP_LOADING' });\r\n            dispatch({ type: 'SET_POST', payload: [...posts] });\r\n            dispatch({ type: 'LENGTH', payload: res.data.totalPosts });\r\n        };\r\n        fetchPosts();\r\n    }, [dispatch, page]);\r\n\r\n    return (\r\n        <>\r\n            <AddPost />\r\n            {user.posts.map((post) => (\r\n                <Post key={post._id} {...post} />\r\n            ))}\r\n            <nav aria-label='Page navigation example'>\r\n                <ul className='pagination'>\r\n                    {page > 1 && (\r\n                        <li className='page-item'>\r\n                            <Link className='page-link' to={`/${page - 1}`}>\r\n                                Previous\r\n                            </Link>\r\n                        </li>\r\n                    )}\r\n                    {parseInt(user.totalPosts) > parseInt(page) * 3 && (\r\n                        <li className='page-item'>\r\n                            <Link className='page-link' to={`/${page + 1}`}>\r\n                                Next\r\n                            </Link>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </nav>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n",{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":16,"column":8,"nodeType":"162","messageId":"163","endLine":16,"endColumn":12},{"ruleId":"160","severity":1,"message":"164","line":1,"column":44,"nodeType":"162","messageId":"163","endLine":1,"endColumn":52},{"ruleId":"160","severity":1,"message":"165","line":9,"column":9,"nodeType":"162","messageId":"163","endLine":9,"endColumn":15},{"ruleId":"160","severity":1,"message":"166","line":7,"column":12,"nodeType":"162","messageId":"163","endLine":7,"endColumn":16},{"ruleId":"160","severity":1,"message":"166","line":7,"column":12,"nodeType":"162","messageId":"163","endLine":7,"endColumn":16},{"ruleId":"160","severity":1,"message":"164","line":2,"column":40,"nodeType":"162","messageId":"163","endLine":2,"endColumn":48},{"ruleId":"160","severity":1,"message":"167","line":3,"column":16,"nodeType":"162","messageId":"163","endLine":3,"endColumn":26},{"ruleId":"160","severity":1,"message":"168","line":3,"column":22,"nodeType":"162","messageId":"163","endLine":3,"endColumn":33},{"ruleId":"160","severity":1,"message":"166","line":6,"column":12,"nodeType":"162","messageId":"163","endLine":6,"endColumn":16},{"ruleId":"160","severity":1,"message":"169","line":1,"column":29,"nodeType":"162","messageId":"163","endLine":1,"endColumn":38},{"ruleId":"160","severity":1,"message":"166","line":5,"column":12,"nodeType":"162","messageId":"163","endLine":5,"endColumn":16},{"ruleId":"160","severity":1,"message":"170","line":5,"column":18,"nodeType":"162","messageId":"163","endLine":5,"endColumn":26},{"ruleId":"171","severity":1,"message":"172","line":32,"column":8,"nodeType":"173","endLine":32,"endColumn":18,"suggestions":"174"},{"ruleId":"160","severity":1,"message":"175","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":19},{"ruleId":"160","severity":1,"message":"176","line":2,"column":17,"nodeType":"162","messageId":"163","endLine":2,"endColumn":27},{"ruleId":"160","severity":1,"message":"177","line":4,"column":10,"nodeType":"162","messageId":"163","endLine":4,"endColumn":22},{"ruleId":"160","severity":1,"message":"178","line":17,"column":19,"nodeType":"162","messageId":"163","endLine":17,"endColumn":22},{"ruleId":"160","severity":1,"message":"164","line":2,"column":40,"nodeType":"162","messageId":"163","endLine":2,"endColumn":48},{"ruleId":"160","severity":1,"message":"167","line":3,"column":16,"nodeType":"162","messageId":"163","endLine":3,"endColumn":26},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'isAuth' is assigned a value but never used.","'user' is assigned a value but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'useEffect' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.","ArrayExpression",["181"],"'FormComment' is defined but never used.","'useContext' is defined but never used.","'StateContext' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},"Update the dependencies array to be: [dispatch, user.id]",{"range":"184","text":"185"},[1171,1181],"[dispatch, user.id]"]